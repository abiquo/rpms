From 4f519b4eaee8fff05726313783c64892189c856b Mon Sep 17 00:00:00 2001
From: Kevin Wolf <kwolf@redhat.com>
Date: Tue, 14 Feb 2012 11:14:40 +0100
Subject: [PATCH 75/99] block: directly invoke .bdrv_* from emulation
 functions

RH-Author: Kevin Wolf <kwolf@redhat.com>
Message-id: <1329218101-24213-76-git-send-email-kwolf@redhat.com>
Patchwork-id: 37273
O-Subject: [RHEL-6.3 qemu-kvm PATCH v2 75/96] block: directly invoke .bdrv_* from emulation functions
Bugzilla: 783950
RH-Acked-by: Paolo Bonzini <pbonzini@redhat.com>
RH-Acked-by: Marcelo Tosatti <mtosatti@redhat.com>
RH-Acked-by: Laszlo Ersek <lersek@redhat.com>

From: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>

Bugzilla: 783950

The emulation functions which supply default BlockDriver .bdrv_*()
functions given another implemented .bdrv_*() function should not use
public bdrv_*() interfaces.  This patch ensures they invoke .bdrv_*()
directly to avoid adding an extra layer of coroutine request processing
and possibly entering an infinite loop.

Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>
Signed-off-by: Kevin Wolf <kwolf@redhat.com>
(cherry picked from commit 1ed20acf2f581480436fb621995ef7c18fa75fad)
---
 block.c |   14 ++++++++------
 1 files changed, 8 insertions(+), 6 deletions(-)

Signed-off-by: Michal Novotny <minovotn@redhat.com>
---
 block.c |   14 ++++++++------
 1 files changed, 8 insertions(+), 6 deletions(-)

diff --git a/block.c b/block.c
index 3b9a4d7..b7c90e5 100644
--- a/block.c
+++ b/block.c
@@ -2592,9 +2592,9 @@ static BlockDriverAIOCB *bdrv_aio_rw_vector(BlockDriverState *bs,
 
     if (is_write) {
         qemu_iovec_to_buffer(acb->qiov, acb->bounce);
-        acb->ret = bdrv_write(bs, sector_num, acb->bounce, nb_sectors);
+        acb->ret = bs->drv->bdrv_write(bs, sector_num, acb->bounce, nb_sectors);
     } else {
-        acb->ret = bdrv_read(bs, sector_num, acb->bounce, nb_sectors);
+        acb->ret = bs->drv->bdrv_read(bs, sector_num, acb->bounce, nb_sectors);
     }
 
     qemu_bh_schedule(acb->bh);
@@ -2759,8 +2759,9 @@ static int bdrv_read_em(BlockDriverState *bs, int64_t sector_num,
     iov.iov_base = (void *)buf;
     iov.iov_len = nb_sectors * BDRV_SECTOR_SIZE;
     qemu_iovec_init_external(&qiov, &iov, 1);
-    acb = bdrv_aio_readv(bs, sector_num, &qiov, nb_sectors,
-        bdrv_rw_em_cb, &async_ret);
+
+    acb = bs->drv->bdrv_aio_readv(bs, sector_num, &qiov, nb_sectors,
+                                  bdrv_rw_em_cb, &async_ret);
     if (acb == NULL) {
         async_ret = -1;
         goto fail;
@@ -2787,8 +2788,9 @@ static int bdrv_write_em(BlockDriverState *bs, int64_t sector_num,
     iov.iov_base = (void *)buf;
     iov.iov_len = nb_sectors * BDRV_SECTOR_SIZE;
     qemu_iovec_init_external(&qiov, &iov, 1);
-    acb = bdrv_aio_writev(bs, sector_num, &qiov, nb_sectors,
-        bdrv_rw_em_cb, &async_ret);
+
+    acb = bs->drv->bdrv_aio_writev(bs, sector_num, &qiov, nb_sectors,
+                                   bdrv_rw_em_cb, &async_ret);
     if (acb == NULL) {
         async_ret = -1;
         goto fail;
-- 
1.7.7.5

